{"version":3,"sources":["vendor/ember-cli/app-prefix.js","d3-demo/app.js","d3-demo/initializers/app-version.js","d3-demo/initializers/export-application-global.js","d3-demo/router.js","d3-demo/routes/demo1.js","d3-demo/routes/demo2.js","d3-demo/templates/application.js","d3-demo/templates/demo2.js","d3-demo/templates/index.js","d3-demo/tests/app.jshint.js","d3-demo/tests/helpers/resolver.js","d3-demo/tests/helpers/resolver.jshint.js","d3-demo/tests/helpers/start-app.js","d3-demo/tests/helpers/start-app.jshint.js","d3-demo/tests/router.jshint.js","d3-demo/tests/routes/demo1.jshint.js","d3-demo/tests/routes/demo2.jshint.js","d3-demo/tests/test-helper.js","d3-demo/tests/test-helper.jshint.js","d3-demo/tests/unit/controllers/demo1-test.js","d3-demo/tests/unit/controllers/demo1-test.jshint.js","d3-demo/tests/unit/routes/demo1-test.js","d3-demo/tests/unit/routes/demo1-test.jshint.js","d3-demo/tests/unit/routes/demo2-test.js","d3-demo/tests/unit/routes/demo2-test.jshint.js","d3-demo/tests/unit/views/demo1-test.js","d3-demo/tests/unit/views/demo1-test.jshint.js","d3-demo/tests/unit/views/demo2-test.js","d3-demo/tests/unit/views/demo2-test.jshint.js","d3-demo/tests/views/demo1.jshint.js","d3-demo/tests/views/demo2.jshint.js","d3-demo/views/demo1.js","d3-demo/views/demo2.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('d3-demo/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'd3-demo/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('d3-demo/initializers/app-version', ['exports', 'd3-demo/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('d3-demo/initializers/export-application-global', ['exports', 'ember', 'd3-demo/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('d3-demo/router', ['exports', 'ember', 'd3-demo/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType\n    });\n\n    exports['default'] = Router.map(function () {\n        this.route(\"demo1\");\n        this.route(\"demo2\");\n    });\n\n});","define('d3-demo/routes/demo1', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function model() {\n            return {\n                data: [{ label: \"1\", value: 10 }, { label: \"2\", value: 20 }, { label: \"3\", value: 15 }, { label: \"4\", value: 5 }, { label: \"5\", value: 5 }, { label: \"5\", value: 5 }, { label: \"5\", value: 5 }, { label: \"5\", value: 5 }, { label: \"5\", value: 5 }]\n            };\n        }\n    });\n\n});","define('d3-demo/routes/demo2', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    function makeNode(depth) {\n        if (!depth) {\n            depth = 0;\n        }\n\n        var d = {};\n        d.label = faker.lorem.words(1)[0];\n        d.image = faker.internet.avatar();\n        d.stories = [];\n        for (var i = 0; i < faker.random.number({ min: 3, max: 7 }); ++i) {\n            var s = {};\n            d.stories.push(s);\n            s.title = faker.lorem.sentence(3, 8);\n            s.volume = faker.random.number(50);\n            s.examples = [];\n            for (var j = 0; j < faker.random.number({ min: 2, max: 7 }); ++j) {\n                var e = {};\n                s.examples.push(e);\n                e.content = faker.lorem.sentence(5, 20);\n                e.published = faker.date.recent();\n            }\n        }\n\n        if (depth === 0) {\n            d.rel = [];\n            for (i = 0; i < faker.random.number({ min: 5, max: 10 }); ++i) {\n                d.rel.push(makeNode(depth + 1));\n            }\n        }\n        return d;\n    }\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function model() {\n            return {\n                data: makeNode()\n            };\n        }\n    });\n\n});","define('d3-demo/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('d3-demo/templates/demo2', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('d3-demo/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Demo1\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Demo2\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,4,4,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"link-to\", [\"demo1\"], {}, child0, null);\n        block(env, morph1, context, \"link-to\", [\"demo2\"], {}, child1, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('d3-demo/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/helpers/resolver', ['exports', 'ember/resolver', 'd3-demo/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('d3-demo/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/helpers/start-app', ['exports', 'ember', 'd3-demo/app', 'd3-demo/router', 'd3-demo/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('d3-demo/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/routes/demo1.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/demo1.js should pass jshint', function() { \n    ok(true, 'routes/demo1.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/routes/demo2.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/demo2.js should pass jshint', function() { \n    ok(false, 'routes/demo2.js should pass jshint.\\nroutes/demo2.js: line 9, col 15, \\'faker\\' is not defined.\\nroutes/demo2.js: line 10, col 15, \\'faker\\' is not defined.\\nroutes/demo2.js: line 12, col 25, \\'faker\\' is not defined.\\nroutes/demo2.js: line 15, col 19, \\'faker\\' is not defined.\\nroutes/demo2.js: line 16, col 20, \\'faker\\' is not defined.\\nroutes/demo2.js: line 18, col 29, \\'faker\\' is not defined.\\nroutes/demo2.js: line 21, col 25, \\'faker\\' is not defined.\\nroutes/demo2.js: line 22, col 27, \\'faker\\' is not defined.\\nroutes/demo2.js: line 28, col 25, \\'faker\\' is not defined.\\n\\n9 errors'); \n  });\n\n});","define('d3-demo/tests/test-helper', ['d3-demo/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('d3-demo/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/unit/controllers/demo1-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:demo1\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('d3-demo/tests/unit/controllers/demo1-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/demo1-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/demo1-test.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/unit/routes/demo1-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:demo1\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('d3-demo/tests/unit/routes/demo1-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/demo1-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/demo1-test.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/unit/routes/demo2-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:demo2\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('d3-demo/tests/unit/routes/demo2-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/demo2-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/demo2-test.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/unit/views/demo1-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"view:demo1\");\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('d3-demo/tests/unit/views/demo1-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/demo1-test.js should pass jshint', function() { \n    ok(true, 'unit/views/demo1-test.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/unit/views/demo2-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"view:demo2\");\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('d3-demo/tests/unit/views/demo2-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/demo2-test.js should pass jshint', function() { \n    ok(true, 'unit/views/demo2-test.js should pass jshint.'); \n  });\n\n});","define('d3-demo/tests/views/demo1.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/demo1.js should pass jshint', function() { \n    ok(false, 'views/demo1.js should pass jshint.\\nviews/demo1.js: line 30, col 37, \\'faker\\' is not defined.\\nviews/demo1.js: line 98, col 38, \\'faker\\' is not defined.\\nviews/demo1.js: line 27, col 13, \\'bound\\' is defined but never used.\\nviews/demo1.js: line 72, col 28, \\'r\\' is defined but never used.\\nviews/demo1.js: line 84, col 33, \\'d\\' is defined but never used.\\nviews/demo1.js: line 98, col 33, \\'d\\' is defined but never used.\\nviews/demo1.js: line 149, col 17, \\'text\\' is defined but never used.\\nviews/demo1.js: line 113, col 38, \\'i\\' is defined but never used.\\nviews/demo1.js: line 121, col 34, \\'i\\' is defined but never used.\\nviews/demo1.js: line 121, col 31, \\'d\\' is defined but never used.\\nviews/demo1.js: line 133, col 40, \\'i\\' is defined but never used.\\nviews/demo1.js: line 142, col 34, \\'i\\' is defined but never used.\\nviews/demo1.js: line 142, col 31, \\'d\\' is defined but never used.\\nviews/demo1.js: line 153, col 33, \\'d\\' is defined but never used.\\n\\n14 errors'); \n  });\n\n});","define('d3-demo/tests/views/demo2.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/demo2.js should pass jshint', function() { \n    ok(false, 'views/demo2.js should pass jshint.\\nviews/demo2.js: line 178, col 44, Expected \\'{\\' and instead saw \\'return\\'.\\nviews/demo2.js: line 181, col 36, Expected \\'{\\' and instead saw \\'return\\'.\\nviews/demo2.js: line 63, col 37, \\'d\\' is defined but never used.\\nviews/demo2.js: line 72, col 30, \\'d\\' is defined but never used.\\n\\n4 errors'); \n  });\n\n});","define('d3-demo/views/demo1', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n\n        classNames: [\"demo1\"],\n\n        width: window.innerWidth * 0.95,\n        height: window.innerHeight,\n\n        strokeWidth: 3,\n        rows: 1,\n        padding: 5,\n        fill: d3.scale.category10,\n\n        onInsertion: (function () {\n            this.fireRedraw();\n        }).on(\"didInsertElement\"),\n\n        dataBinding: \"controller.model.data\",\n\n        draw: function draw() {\n            var $this = this.$();\n            $this.empty();\n\n            var width = this.get(\"width\"),\n                height = this.get(\"height\"),\n                bound = Math.min(width, height),\n                data = this.get(\"data\");\n\n            data.forEach(function (d) {\n                return d.terms = faker.lorem.words(5);\n            });\n\n            var nodes = [],\n                foci = [],\n                fill = this.get(\"fill\"),\n                _id = 0,\n                padding = this.get(\"padding\"),\n                strokeWidth = this.get(\"strokeWidth\"),\n                rows = this.get(\"rows\"),\n                cols = Math.ceil(data.length / rows),\n                radius = (width - (padding * data.length + 1)) / data.length / 2;\n\n            var svg = d3.select(this.get(\"element\")).append(\"svg\").attr(\"height\", height).attr(\"width\", width);\n\n            data.forEach(function (d, i) {\n                d.foci = i;\n                d._id = _id++;\n                nodes.push(d);\n\n                var row = Math.floor(i / cols),\n                    col = Math.floor(i % cols),\n                    yCenter = row * (radius * 2 + padding) + radius + padding,\n                    xCenter = col * (radius * 2 + padding) + radius + padding;\n                var point = { x: xCenter, y: yCenter };\n                foci.push(point);\n                d.x = foci[d.foci].x;\n                d.y = foci[d.foci].y;\n            });\n\n            var node = svg.selectAll(\"g.entity\").data(nodes).enter().append(\"g\").attr(\"class\", \"entity\").attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + d.y + \")\";\n            });\n\n            function updateCircle() {\n                d3.select(this).transition().duration(300).ease(\"linear\").attr(\"r\", function (r) {\n                    return radius;\n                });\n            }\n\n            node.append(\"circle\").style(\"stroke\", function (d) {\n                return d3.rgb(fill(d.foci)).darker(2);\n            }).style(\"fill\", function (d) {\n                return d3.rgb(fill(d.foci));\n            }).style(\"stroke-width\", strokeWidth).each(updateCircle);\n\n            // Suppose the image is square, and is centered in a circle with radius r.\n            // Then, the square image should hit at 45 degrees, meaning that the width\n            // and height should be 2*sin(tao/8) * r\n            var imageWH = function imageWH(d) {\n                return 2 * Math.sin(6.28 / 8) * (radius - strokeWidth);\n            };\n\n            function updateImage() {\n                d3.select(this).transition().duration(300).ease(\"linear\").attr(\"x\", function (d) {\n                    return -imageWH(d) / 2;\n                }).attr(\"y\", function (d) {\n                    return -imageWH(d) / 2;\n                }).attr(\"width\", imageWH).attr(\"height\", imageWH);\n            }\n\n            node.append(\"image\").attr(\"xlink:href\", function (d) {\n                return faker.internet.avatar();\n            }).each(updateImage);\n\n            node.on(\"click\", function (n) {\n                return selectNode(n._id);\n            });\n\n            var currentId = -1;\n\n            function selectNode(id) {\n                currentId = id;\n\n                // first move old center back\n                var others = d3.selectAll(\"g.entity\").filter(function (d) {\n                    return d._id !== id;\n                });\n                others.each(function (d, i) {\n                    d.x = foci[d.foci].x;\n                    d.y = foci[d.foci].y;\n                    d3.select(this).transition().duration(300).ease(\"linear\").attr(\"transform\", function (d) {\n                        return \"translate(\" + d.x + \",\" + d.y + \")\";\n                    });\n                }).each(function (d, i) {\n                    d3.select(this).select(\"circle\").transition().duration(300).ease(\"linear\").attr(\"r\", radius);\n                });\n                others.select(\"text\").remove();\n\n                // now, move to the center\n                var selected = d3.selectAll(\"g.entity\").filter(function (d) {\n                    return d._id === id;\n                });\n                selected.each(function (d, i) {\n                    d.x = width / 2 - radius;\n                    d.y = height / 2 - radius;\n                    d3.select(this).transition().duration(300).ease(\"linear\").attr(\"transform\", function (d) {\n                        return \"translate(\" + d.x + \",\" + d.y + \")\";\n                    });\n                }).each(function (d, i) {\n                    d3.select(this).select(\"circle\").transition().duration(300).ease(\"linear\").attr(\"r\", radius * 1.5);\n                });\n\n                // add text\n                var text = selected.append(\"text\").text(function (d) {\n                    return d.terms.join(\" \");\n                }).each(function (d) {\n                    // need to get the text width\n                    var box = this.getBBox();\n                    d3.select(this).attr(\"x\", -box.width / 2).attr(\"y\", radius * 1.5 + box.height);\n                });\n\n                Ember['default'].run.later(this, selectNode, (currentId + 1) % data.length, 2000);\n            }\n            Ember['default'].run.later(this, selectNode, (currentId + 1) % data.length, 2000);\n        },\n\n        fireRedraw: (function () {\n            d3.select(this.get(\"element\")).selectAll(\"*\").remove();\n            Ember['default'].run.once(this, this.draw);\n        }).observes(\"width\", \"height\", \"data\")\n\n    });\n\n});","define('d3-demo/views/demo2', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n\n        classNames: [\"demo2\"],\n\n        width: window.innerHeight * 2 / 3,\n        height: window.innerHeight * 2 / 3,\n\n        dataBinding: \"controller.model.data\",\n\n        onInsertion: (function () {\n            this.fireRedraw();\n        }).on(\"didInsertElement\"),\n\n        draw: function draw() {\n            var $this = this.$();\n            $this.empty();\n\n            var w = this.get(\"width\"),\n                h = this.get(\"height\"),\n                bound = Math.min(w, h),\n                root = this.get(\"data\"),\n                node,\n                link;\n\n            root.x = w / 2;\n            root.y = h / 2 - 80;\n\n            var force = d3.layout.force().on(\"tick\", tick).size([w, h]);\n\n            var vis = d3.select(this.get(\"element\")).append(\"svg:svg\").attr(\"width\", w).attr(\"height\", h);\n\n            update();\n\n            function update() {\n                var nodes = flatten(root),\n                    links = d3.layout.tree().links(nodes);\n\n                var volExtent = d3.extent(nodes, function (d) {\n                    return d.volume;\n                }),\n                    radius = d3.scale.linear().domain(volExtent).range([bound / 80, bound / 20]);\n\n                function hover(d) {\n                    d3.selectAll(\"circle\").classed(\"active\", false);\n\n                    d3.select(this).attr(\"r\", function (d) {\n                        return radius(d.volume) * (d.type === \"leaf\" ? 2 : 1);\n                    }).classed(\"active\", true);\n\n                    vis.selectAll(\"text\").remove();\n\n                    vis.append(\"text\").text(d.label || d.title).each(function (d) {\n                        // need to get the text width\n                        var box = this.getBBox();\n                        d3.select(this).attr(\"x\", w / 2 - box.width / 2).attr(\"y\", h - box.height);\n                    });\n                }\n\n                function unhover(d) {\n                    d3.select(this).attr(\"r\", function (d) {\n                        return radius(d.volume);\n                    });\n                }\n\n                // Restart the force layout.\n                force.nodes(nodes).links(links).charge(function (d) {\n                    return d.type === \"leaf\" ? -100 : -d.volume * 2;\n                }).linkDistance(function (d) {\n                    return d.target.type === \"leaf\" ? 50 : 80;\n                }).start();\n\n                // Update the links…\n                link = vis.selectAll(\"line.link\").data(links, function (d) {\n                    return d.target.id;\n                });\n\n                // Enter any new links.\n                link.enter().insert(\"svg:line\", \".node\").attr(\"class\", \"link\").attr(\"x1\", function (d) {\n                    return d.source.x;\n                }).attr(\"y1\", function (d) {\n                    return d.source.y;\n                }).attr(\"x2\", function (d) {\n                    return d.target.x;\n                }).attr(\"y2\", function (d) {\n                    return d.target.y;\n                });\n\n                // Exit any old links.\n                link.exit().remove();\n\n                // Update the nodes…\n                node = vis.selectAll(\"circle.node\").data(nodes, function (d) {\n                    return d.id;\n                }).style(\"fill\", color);\n\n                node.transition().attr(\"r\", function (d) {\n                    return Math.sqrt(d.volume);\n                });\n\n                // Enter any new nodes.\n                node.enter().append(\"svg:circle\").attr(\"class\", \"node\").attr(\"cx\", function (d) {\n                    return d.x;\n                }).attr(\"cy\", function (d) {\n                    return d.y;\n                }).each(unhover).style(\"fill\", color).on(\"click\", click).on(\"mouseover\", hover).on(\"mouseout\", unhover).call(force.drag);\n\n                // Exit any old nodes.\n                node.exit().remove();\n            }\n\n            function tick() {\n                link.attr(\"x1\", function (d) {\n                    return d.source.x;\n                }).attr(\"y1\", function (d) {\n                    return d.source.y;\n                }).attr(\"x2\", function (d) {\n                    return d.target.x;\n                }).attr(\"y2\", function (d) {\n                    return d.target.y;\n                });\n\n                node.attr(\"cx\", function (d) {\n                    return d.x;\n                }).attr(\"cy\", function (d) {\n                    return d.y;\n                });\n            }\n\n            // Color leaf nodes orange, and packages white or blue.\n            function color(d) {\n                return d._stories || d._rel ? \"#3182bd\" : d.stories || d.rel ? \"#c6dbef\" : \"#fd8d3c\";\n            }\n\n            // Toggle children on click.\n            function click(d) {\n\n                if (d3.event.defaultPrevented) {\n                    return;\n                } // actually a drag event\n\n                // leaf nodes don't force a re-render\n                if (d.type === \"leaf\") {\n                    return;\n                }if (d.children) {\n                    d._stories = d.stories;\n                    d._rel = d.rel;\n                    d.stories = null;\n                    d.rel = null;\n                    d.children = null;\n                } else {\n                    d.stories = d._stories;\n                    d.rel = d._rel;\n                    d._stories = null;\n                    d._rel = null;\n                }\n                update();\n            }\n\n            // Returns a list of all nodes under the root.\n            function flatten(root) {\n                var nodes = [],\n                    i = 0;\n\n                function recurse(node) {\n\n                    var vol = node.volume || 0;\n\n                    if (node.stories) {\n                        vol += node.stories.reduce(function (p, v) {\n                            v.type = \"leaf\";\n                            return p + recurse(v);\n                        }, 0);\n                        node.children = (node.children || []).concat(node.stories);\n                    }\n\n                    if (node.rel) {\n                        vol += node.rel.reduce(function (p, v) {\n                            return p + recurse(v);\n                        }, 0);\n                        node.children = (node.children || []).concat(node.rel);\n                    }\n\n                    if (!node.id) {\n                        node.id = ++i;\n                    }\n                    nodes.push(node);\n                    if (!node.volume) {\n                        node.volume = vol;\n                    }\n                    return vol;\n                }\n\n                recurse(root);\n                return nodes;\n            }\n        },\n\n        fireRedraw: (function () {\n            d3.select(this.get(\"element\")).selectAll(\"*\").remove();\n            Ember['default'].run.once(this, this.draw);\n        }).observes(\"width\", \"height\", \"data\")\n\n    });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('d3-demo/config/environment', ['ember'], function(Ember) {\n  var prefix = 'd3-demo';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"d3-demo/tests/test-helper\");\n} else {\n  require(\"d3-demo/app\")[\"default\"].create({\"name\":\"d3-demo\",\"version\":\"0.0.0.80fc58d1\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbfile":"d3-demo.js"}